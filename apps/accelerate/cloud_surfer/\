FROM nvidia/cuda:12.1.0-devel-ubuntu22.04
# TODO: move to Ray base image once CUDA-12 version is available

# Args
ARG COMPILER=all
ARG NEBULLVM_VERSION=0.9.1
ARG PYTHON_VERSION=3.9.15

# Envs
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV PATH="/root/miniconda3/bin:${PATH}"

# Requirements
RUN apt-get update && apt-get install -y wget --no-install-recommends  \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && mkdir "${HOME}"/.conda \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh \
    && echo "Running $(conda --version)" \
    && conda init bash \
    && conda update conda \
    && conda create -n default \
    && conda activate default \
    && conda install python=${PYTHON_VERSION} pip \
    && echo "conda activate default" >> "${HOME}"/.bashrc \
    && source "${HOME}"/.bashrc

# Install Ray nightly release
RUN pip3 install --no-cache-dir -U "ray [default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp39-cp39-manylinux2014_x86_64.whl"

# Install libraries
RUN pip3 install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117 \
    && python3 -m pip install --upgrade pip \
    && pip3 install --no-cache-dir xformers \
    && pip3 install --no-cache-dir diffusers \
    && pip3 install --no-cache-dir cuda-python \
    && pip3 install --no-cache-dir accelerate \
    && pip3 install --no-cache-dir onnx-graphsurgeon --extra-index-url https://pypi.ngc.nvidia.com \
    && pip3 install --no-cache-dir tensorrt==8.6.0

# Install required python modules
RUN pip3 install --no-cache-dir cmake

# Install Nebullvm
RUN pip3 install --no-cache-dir nebullvm==${NEBULLVM_VERSION}

# Install deep learning compilers
RUN python3 -m nebullvm.installers.auto_installer --frameworks all --extra-backends all --compilers all

ENV SIGOPT_PROJECT="tmp"
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/python3.9/dist-packages/tensorrt
ENV CUDA_MODULE_LOADING="LAZY"

