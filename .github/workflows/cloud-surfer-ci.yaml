name: Cloud Surfer CI Pipeline

on:
  push:
    branches:
      - "main"
    paths:
      - "apps/accelerate/cloud_surfer/**"
      # Ignored paths
      - "!.github/**"
      - "!*.md"
      - "!docs/**"
      - "!notebooks/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "apps/accelerate/cloud_surfer/**"
      # Ignored paths
      - "!.github/**"
      - "!*.md"
      - "!docs/**"
      - "!notebooks/**"

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/accelerate/cloud_surfer

    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2
        # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        # Display the Python version being used
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Show Poetry version
        run: poetry --version
        # Load cached env if exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: apps/accelerate/cloud_surfer/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --extras all --with dev
      - name: Activate venv
        run: source $VENV
      - name: Run tests
        run: make test

